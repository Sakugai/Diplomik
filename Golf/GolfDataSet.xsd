<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GolfDataSet" targetNamespace="http://tempuri.org/GolfDataSet.xsd" xmlns:mstns="http://tempuri.org/GolfDataSet.xsd" xmlns="http://tempuri.org/GolfDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="GolfConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="GolfConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Golf.Properties.Settings.GlobalReference.Default.GolfConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AutorizationTableAdapter" GeneratorDataComponentClassName="AutorizationTableAdapter" Name="Autorization" UserDataComponentName="AutorizationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="Golf.dbo.Autorization" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Autorization] WHERE (([ID_Autorization] = @Original_ID_Autorization) AND ([Login] = @Original_Login) AND ([Password] = @Original_Password) AND ([ID_Roles] = @Original_ID_Roles))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Autorization" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Autorization" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Roles" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Roles" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Autorization] ([Login], [Password], [ID_Roles]) VALUES (@Login, @Password, @ID_Roles);
SELECT ID_Autorization, Login, Password, ID_Roles FROM Autorization WHERE (ID_Autorization = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Roles" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Roles" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Autorization, Login, Password, ID_Roles FROM dbo.Autorization</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Autorization] SET [Login] = @Login, [Password] = @Password, [ID_Roles] = @ID_Roles WHERE (([ID_Autorization] = @Original_ID_Autorization) AND ([Login] = @Original_Login) AND ([Password] = @Original_Password) AND ([ID_Roles] = @Original_ID_Roles));
SELECT ID_Autorization, Login, Password, ID_Roles FROM Autorization WHERE (ID_Autorization = @ID_Autorization)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Roles" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Roles" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Autorization" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Autorization" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Roles" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Roles" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Autorization" ColumnName="ID_Autorization" DataSourceName="Golf.dbo.Autorization" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Autorization" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Autorization" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Autorization" DataSetColumn="ID_Autorization" />
              <Mapping SourceColumn="Login" DataSetColumn="Login" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="ID_Roles" DataSetColumn="ID_Roles" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BookingTableAdapter" GeneratorDataComponentClassName="BookingTableAdapter" Name="Booking" UserDataComponentName="BookingTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID_Booking, Client.Surnames, Fields.Fields_name, Inventory.Inventory_name, Staff.Surnames, Booking.TimeStart, Booking.TimeEnd FROM dbo.Booking
LEFT JOIN Client ON Booking.ID_Client = Client.ID_Client
LEFT JOIN Fields ON Booking.ID_Fields = Fields.ID_Fields
LEFT JOIN Inventory ON Booking.ID_Inventory = Inventory.ID_Inventory
LEFT JOIN Staff ON Booking.ID_Staff = Staff.ID_Staff
</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Booking" DataSetColumn="ID_Booking" />
              <Mapping SourceColumn="TimeStart" DataSetColumn="TimeStart" />
              <Mapping SourceColumn="TimeEnd" DataSetColumn="TimeEnd" />
              <Mapping SourceColumn="Surnames" DataSetColumn="Surnames" />
              <Mapping SourceColumn="Fields_name" DataSetColumn="Fields_name" />
              <Mapping SourceColumn="Inventory_name" DataSetColumn="Inventory_name" />
              <Mapping SourceColumn="Surnames1" DataSetColumn="Surnames1" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Booking] WHERE ([ID_Booking] = @Original_ID_Booking);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Booking" ColumnName="ID_Booking" DataSourceName="Golf.dbo.Booking" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Booking" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Booking" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Booking] ([TimeStart], [TimeEnd], [ID_Client], [ID_Fields], [ID_Inventory], [ID_Staff]) VALUES (@TimeStart, @TimeEnd,@ID_Client,@ID_Fields,@ID_Inventory ,@ID_Staff);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="TimeStart" ColumnName="TimeStart" DataSourceName="Golf.dbo.Booking" DataTypeServer="time" DbType="AnsiString" Direction="Input" ParameterName="@TimeStart" Precision="0" ProviderType="Time" Scale="0" Size="5" SourceColumn="TimeStart" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TimeEnd" ColumnName="TimeEnd" DataSourceName="Golf.dbo.Booking" DataTypeServer="time" DbType="AnsiString" Direction="Input" ParameterName="@TimeEnd" Precision="0" ProviderType="Time" Scale="0" Size="5" SourceColumn="TimeEnd" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Client" ColumnName="ID_Client" DataSourceName="Golf.dbo.Booking" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Client" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Client" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Fields" ColumnName="ID_Fields" DataSourceName="Golf.dbo.Booking" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Fields" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Fields" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="ID_Inventory" ColumnName="ID_Inventory" DataSourceName="Golf.dbo.Booking" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Inventory" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Inventory" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="ID_Staff" ColumnName="ID_Staff" DataSourceName="Golf.dbo.Booking" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Staff" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Staff" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Booking] SET [TimeStart] = @TimeStart, [TimeEnd] = @TimeEnd, [ID_Client] = @ID_Client , [ID_Fields]= @ID_Fields, [ID_Inventory] = @ID_Inventory, [ID_Staff] = @ID_Staff WHERE ([ID_Booking] = @Original_ID_Booking)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="TimeStart" ColumnName="TimeStart" DataSourceName="Golf.dbo.Booking" DataTypeServer="time" DbType="AnsiString" Direction="Input" ParameterName="@TimeStart" Precision="0" ProviderType="Time" Scale="0" Size="5" SourceColumn="TimeStart" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TimeEnd" ColumnName="TimeEnd" DataSourceName="Golf.dbo.Booking" DataTypeServer="time" DbType="AnsiString" Direction="Input" ParameterName="@TimeEnd" Precision="0" ProviderType="Time" Scale="0" Size="5" SourceColumn="TimeEnd" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Client" ColumnName="ID_Client" DataSourceName="Golf.dbo.Booking" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Client" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Client" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Fields" ColumnName="ID_Fields" DataSourceName="Golf.dbo.Booking" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Fields" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Fields" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="ID_Inventory" ColumnName="ID_Inventory" DataSourceName="Golf.dbo.Booking" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Inventory" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Inventory" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="ID_Staff" ColumnName="ID_Staff" DataSourceName="Golf.dbo.Booking" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Staff" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Staff" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Booking" ColumnName="ID_Booking" DataSourceName="Golf.dbo.Booking" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Booking" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Booking" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClientTableAdapter" GeneratorDataComponentClassName="ClientTableAdapter" Name="Client" UserDataComponentName="ClientTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID_Client, Surnames, Names, MiddleName, Membership.Membership_name FROM dbo.Client
LEFT JOIN Membership ON Client.ID_Membership = Membership.ID_Membership</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Client" DataSetColumn="ID_Client" />
              <Mapping SourceColumn="Surnames" DataSetColumn="Surnames" />
              <Mapping SourceColumn="Names" DataSetColumn="Names" />
              <Mapping SourceColumn="MiddleName" DataSetColumn="MiddleName" />
              <Mapping SourceColumn="Membership_name" DataSetColumn="Membership_name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Client] WHERE ([ID_Client] = @Original_ID_Client)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Client" ColumnName="ID_Client" DataSourceName="Golf.dbo.Client" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Client" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Client" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Client] ([Surnames], [Names], [MiddleName], [ID_Membership]) VALUES (@Surnames, @Names, @MiddleName, @ID_Membership);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Surnames" ColumnName="Surnames" DataSourceName="Golf.dbo.Client" DataTypeServer="nvarchar(20)" DbType="String" Direction="Input" ParameterName="@Surnames" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="Surnames" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Names" ColumnName="Names" DataSourceName="Golf.dbo.Client" DataTypeServer="nvarchar(20)" DbType="String" Direction="Input" ParameterName="@Names" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="Names" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="MiddleName" ColumnName="MiddleName" DataSourceName="Golf.dbo.Client" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Membership" ColumnName="ID_Membership" DataSourceName="Golf.dbo.Client" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Membership" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Membership" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Client] SET [Surnames] = @Surnames, [Names] = @Names, [MiddleName] = @MiddleName, [ID_Membership] = @ID_Membership WHERE ([ID_Client] = @Original_ID_Client)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Surnames" ColumnName="Surnames" DataSourceName="Golf.dbo.Client" DataTypeServer="nvarchar(20)" DbType="String" Direction="Input" ParameterName="@Surnames" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="Surnames" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Names" ColumnName="Names" DataSourceName="Golf.dbo.Client" DataTypeServer="nvarchar(20)" DbType="String" Direction="Input" ParameterName="@Names" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="Names" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="MiddleName" ColumnName="MiddleName" DataSourceName="Golf.dbo.Client" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Membership" ColumnName="ID_Membership" DataSourceName="Golf.dbo.Client" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Membership" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Membership" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Client" ColumnName="ID_Client" DataSourceName="Golf.dbo.Client" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Client" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Client" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Client_TournamentTableAdapter" GeneratorDataComponentClassName="Client_TournamentTableAdapter" Name="Client_Tournament" UserDataComponentName="Client_TournamentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="Golf.dbo.Client_Tournament" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Client_Tournament] WHERE (([ID_Client_Tournament] = @Original_ID_Client_Tournament) AND ((@IsNull_ID_Client = 1 AND [ID_Client] IS NULL) OR ([ID_Client] = @Original_ID_Client)) AND ([ID_Tournament] = @Original_ID_Tournament))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Client_Tournament" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Client_Tournament" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ID_Client" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Client" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Client" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Client" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Tournament" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Tournament" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Client_Tournament] ([ID_Client_Tournament], [ID_Client], [ID_Tournament]) VALUES (@ID_Client_Tournament, @ID_Client, @ID_Tournament);
SELECT ID_Client_Tournament, ID_Client, ID_Tournament FROM Client_Tournament WHERE (ID_Client_Tournament = @ID_Client_Tournament)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Client_Tournament" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Client_Tournament" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Client" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Client" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Tournament" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Tournament" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Client_Tournament, ID_Client, ID_Tournament FROM dbo.Client_Tournament</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Client_Tournament] SET [ID_Client_Tournament] = @ID_Client_Tournament, [ID_Client] = @ID_Client, [ID_Tournament] = @ID_Tournament WHERE (([ID_Client_Tournament] = @Original_ID_Client_Tournament) AND ((@IsNull_ID_Client = 1 AND [ID_Client] IS NULL) OR ([ID_Client] = @Original_ID_Client)) AND ([ID_Tournament] = @Original_ID_Tournament));
SELECT ID_Client_Tournament, ID_Client, ID_Tournament FROM Client_Tournament WHERE (ID_Client_Tournament = @ID_Client_Tournament)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Client_Tournament" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Client_Tournament" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Client" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Client" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Tournament" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Tournament" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Client_Tournament" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Client_Tournament" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ID_Client" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Client" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Client" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Client" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Tournament" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Tournament" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Client_Tournament" DataSetColumn="ID_Client_Tournament" />
              <Mapping SourceColumn="ID_Client" DataSetColumn="ID_Client" />
              <Mapping SourceColumn="ID_Tournament" DataSetColumn="ID_Tournament" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FieldsTableAdapter" GeneratorDataComponentClassName="FieldsTableAdapter" Name="Fields" UserDataComponentName="FieldsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="Golf.dbo.Fields" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Fields] WHERE (([ID_Fields] = @Original_ID_Fields) AND ([Fields_name] = @Original_Fields_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Fields" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Fields" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Fields_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Fields_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Fields] ([Fields_name], [Description]) VALUES (@Fields_name, @Description);
SELECT ID_Fields, Fields_name, Description FROM Fields WHERE (ID_Fields = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Fields_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Fields_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Fields, Fields_name, Description FROM dbo.Fields</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Fields] SET [Fields_name] = @Fields_name, [Description] = @Description WHERE (([ID_Fields] = @Original_ID_Fields) AND ([Fields_name] = @Original_Fields_name));
SELECT ID_Fields, Fields_name, Description FROM Fields WHERE (ID_Fields = @ID_Fields)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Fields_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Fields_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Fields" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Fields" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Fields_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Fields_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Fields" ColumnName="ID_Fields" DataSourceName="Golf.dbo.Fields" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Fields" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Fields" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Fields" DataSetColumn="ID_Fields" />
              <Mapping SourceColumn="Fields_name" DataSetColumn="Fields_name" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Fields] WHERE ([ID_Fields] = @Original_ID_Fields)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Fields" ColumnName="ID_Fields" DataSourceName="Golf.dbo.Fields" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Fields" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Fields" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Fields] ([Fields_name], [Description]) VALUES (@Fields_name, @Description)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Fields_name" ColumnName="Fields_name" DataSourceName="Golf.dbo.Fields" DataTypeServer="nvarchar(20)" DbType="String" Direction="Input" ParameterName="@Fields_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="Fields_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Description" ColumnName="Description" DataSourceName="Golf.dbo.Fields" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Fields] SET [Fields_name] = @Fields_name, [Description] = @Description WHERE ([ID_Fields] = @Original_ID_Fields)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Fields_name" ColumnName="Fields_name" DataSourceName="Golf.dbo.Fields" DataTypeServer="nvarchar(20)" DbType="String" Direction="Input" ParameterName="@Fields_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="Fields_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Description" ColumnName="Description" DataSourceName="Golf.dbo.Fields" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Fields" ColumnName="ID_Fields" DataSourceName="Golf.dbo.Fields" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Fields" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Fields" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InventoryTableAdapter" GeneratorDataComponentClassName="InventoryTableAdapter" Name="Inventory" UserDataComponentName="InventoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="Golf.dbo.Inventory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Inventory] WHERE (([ID_Inventory] = @Original_ID_Inventory) AND ([Inventory_name] = @Original_Inventory_name) AND ([Quantity] = @Original_Quantity) AND ([Cost] = @Original_Cost))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Inventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Inventory" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Inventory_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Inventory_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Inventory] ([Inventory_name], [Quantity], [Cost]) VALUES (@Inventory_name, @Quantity, @Cost);
SELECT ID_Inventory, Inventory_name, Quantity, Cost FROM Inventory WHERE (ID_Inventory = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Inventory_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Inventory_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Inventory, Inventory_name, Quantity, Cost FROM dbo.Inventory</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Inventory] SET [Inventory_name] = @Inventory_name, [Quantity] = @Quantity, [Cost] = @Cost WHERE (([ID_Inventory] = @Original_ID_Inventory) AND ([Inventory_name] = @Original_Inventory_name) AND ([Quantity] = @Original_Quantity) AND ([Cost] = @Original_Cost));
SELECT ID_Inventory, Inventory_name, Quantity, Cost FROM Inventory WHERE (ID_Inventory = @ID_Inventory)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Inventory_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Inventory_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Inventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Inventory" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Inventory_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Inventory_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Inventory" ColumnName="ID_Inventory" DataSourceName="Golf.dbo.Inventory" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Inventory" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Inventory" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Inventory" DataSetColumn="ID_Inventory" />
              <Mapping SourceColumn="Inventory_name" DataSetColumn="Inventory_name" />
              <Mapping SourceColumn="Quantity" DataSetColumn="Quantity" />
              <Mapping SourceColumn="Cost" DataSetColumn="Cost" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MembershipTableAdapter" GeneratorDataComponentClassName="MembershipTableAdapter" Name="Membership" UserDataComponentName="MembershipTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="Golf.dbo.Membership" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Membership] WHERE (([ID_Membership] = @Original_ID_Membership) AND ([Membership_name] = @Original_Membership_name) AND ([Cost] = @Original_Cost) AND ([ID_Membership_Time] = @Original_ID_Membership_Time))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Membership" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Membership" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Membership_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Membership_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Membership_Time" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Membership_Time" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Membership] ([Membership_name], [Cost], [ID_Membership_Time]) VALUES (@Membership_name, @Cost, @ID_Membership_Time);
SELECT ID_Membership, Membership_name, Cost, ID_Membership_Time FROM Membership WHERE (ID_Membership = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Membership_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Membership_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Membership_Time" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Membership_Time" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Membership, Membership_name, Cost, ID_Membership_Time FROM dbo.Membership</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Membership] SET [Membership_name] = @Membership_name, [Cost] = @Cost, [ID_Membership_Time] = @ID_Membership_Time WHERE (([ID_Membership] = @Original_ID_Membership) AND ([Membership_name] = @Original_Membership_name) AND ([Cost] = @Original_Cost) AND ([ID_Membership_Time] = @Original_ID_Membership_Time));
SELECT ID_Membership, Membership_name, Cost, ID_Membership_Time FROM Membership WHERE (ID_Membership = @ID_Membership)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Membership_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Membership_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Membership_Time" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Membership_Time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Membership" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Membership" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Membership_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Membership_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Membership_Time" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Membership_Time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Membership" ColumnName="ID_Membership" DataSourceName="Golf.dbo.Membership" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Membership" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Membership" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Membership" DataSetColumn="ID_Membership" />
              <Mapping SourceColumn="Membership_name" DataSetColumn="Membership_name" />
              <Mapping SourceColumn="Cost" DataSetColumn="Cost" />
              <Mapping SourceColumn="ID_Membership_Time" DataSetColumn="ID_Membership_Time" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Membership_TimeTableAdapter" GeneratorDataComponentClassName="Membership_TimeTableAdapter" Name="Membership_Time" UserDataComponentName="Membership_TimeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="Golf.dbo.Membership_Time" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Membership_Time] WHERE (([ID_Membership_Time] = @Original_ID_Membership_Time) AND ([Time] = @Original_Time))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Membership_Time" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Membership_Time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Time" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Time" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Membership_Time] ([Time]) VALUES (@Time);
SELECT ID_Membership_Time, Time FROM Membership_Time WHERE (ID_Membership_Time = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Time" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Time" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Membership_Time, Time FROM dbo.Membership_Time</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Membership_Time] SET [Time] = @Time WHERE (([ID_Membership_Time] = @Original_ID_Membership_Time) AND ([Time] = @Original_Time));
SELECT ID_Membership_Time, Time FROM Membership_Time WHERE (ID_Membership_Time = @ID_Membership_Time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Time" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Membership_Time" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Membership_Time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Time" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Membership_Time" ColumnName="ID_Membership_Time" DataSourceName="Golf.dbo.Membership_Time" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Membership_Time" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Membership_Time" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Membership_Time" DataSetColumn="ID_Membership_Time" />
              <Mapping SourceColumn="Time" DataSetColumn="Time" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolesTableAdapter" GeneratorDataComponentClassName="RolesTableAdapter" Name="Roles" UserDataComponentName="RolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="Golf.dbo.Roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Roles] WHERE (([ID_Roles] = @Original_ID_Roles) AND ([Name_Role] = @Original_Name_Role))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Roles" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Roles" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name_Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_Role" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Roles] ([Name_Role]) VALUES (@Name_Role);
SELECT ID_Roles, Name_Role FROM Roles WHERE (ID_Roles = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name_Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_Role" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Roles, Name_Role FROM dbo.Roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Roles] SET [Name_Role] = @Name_Role WHERE (([ID_Roles] = @Original_ID_Roles) AND ([Name_Role] = @Original_Name_Role));
SELECT ID_Roles, Name_Role FROM Roles WHERE (ID_Roles = @ID_Roles)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name_Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_Role" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Roles" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Roles" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name_Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name_Role" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Roles" ColumnName="ID_Roles" DataSourceName="Golf.dbo.Roles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Roles" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Roles" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Roles" DataSetColumn="ID_Roles" />
              <Mapping SourceColumn="Name_Role" DataSetColumn="Name_Role" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ServiceTableAdapter" GeneratorDataComponentClassName="ServiceTableAdapter" Name="Service" UserDataComponentName="ServiceTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="Golf.dbo.Service" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Service] WHERE (([ID_Service] = @Original_ID_Service) AND ([Cost] = @Original_Cost) AND ([ID_Inventory] = @Original_ID_Inventory))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Service" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Service" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Inventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Inventory" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Service] ([Cost], [ID_Inventory]) VALUES (@Cost, @ID_Inventory);
SELECT ID_Service, Cost, ID_Inventory FROM Service WHERE (ID_Service = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Inventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Inventory" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Service, Cost, ID_Inventory FROM dbo.Service</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Service] SET [Cost] = @Cost, [ID_Inventory] = @ID_Inventory WHERE (([ID_Service] = @Original_ID_Service) AND ([Cost] = @Original_Cost) AND ([ID_Inventory] = @Original_ID_Inventory));
SELECT ID_Service, Cost, ID_Inventory FROM Service WHERE (ID_Service = @ID_Service)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Inventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Inventory" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Service" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Service" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Inventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Inventory" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Service" ColumnName="ID_Service" DataSourceName="Golf.dbo.Service" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Service" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Service" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Service" DataSetColumn="ID_Service" />
              <Mapping SourceColumn="Cost" DataSetColumn="Cost" />
              <Mapping SourceColumn="ID_Inventory" DataSetColumn="ID_Inventory" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StaffTableAdapter" GeneratorDataComponentClassName="StaffTableAdapter" Name="Staff" UserDataComponentName="StaffTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="Golf.dbo.Staff" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Staff] WHERE (([ID_Staff] = @Original_ID_Staff) AND ([Surnames] = @Original_Surnames) AND ([Names] = @Original_Names) AND ((@IsNull_MiddleName = 1 AND [MiddleName] IS NULL) OR ([MiddleName] = @Original_MiddleName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Staff" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Staff" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Surnames" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Surnames" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Names" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Names" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MiddleName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Staff] ([Surnames], [Names], [MiddleName]) VALUES (@Surnames, @Names, @MiddleName);
SELECT ID_Staff, Surnames, Names, MiddleName FROM Staff WHERE (ID_Staff = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Surnames" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Surnames" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Names" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Names" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Staff, Surnames, Names, MiddleName FROM dbo.Staff</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Staff] SET [Surnames] = @Surnames, [Names] = @Names, [MiddleName] = @MiddleName WHERE (([ID_Staff] = @Original_ID_Staff) AND ([Surnames] = @Original_Surnames) AND ([Names] = @Original_Names) AND ((@IsNull_MiddleName = 1 AND [MiddleName] IS NULL) OR ([MiddleName] = @Original_MiddleName)));
SELECT ID_Staff, Surnames, Names, MiddleName FROM Staff WHERE (ID_Staff = @ID_Staff)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Surnames" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Surnames" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Names" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Names" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Staff" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Staff" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Surnames" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Surnames" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Names" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Names" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MiddleName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Staff" ColumnName="ID_Staff" DataSourceName="Golf.dbo.Staff" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Staff" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Staff" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Staff" DataSetColumn="ID_Staff" />
              <Mapping SourceColumn="Surnames" DataSetColumn="Surnames" />
              <Mapping SourceColumn="Names" DataSetColumn="Names" />
              <Mapping SourceColumn="MiddleName" DataSetColumn="MiddleName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Staff] WHERE ([ID_Staff] = @Original_ID_Staff) </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Staff" ColumnName="ID_Staff" DataSourceName="Golf.dbo.Staff" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Staff" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Staff" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Staff] ([Surnames], [Names], [MiddleName]) VALUES (@Surnames, @Names, @MiddleName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Surnames" ColumnName="Surnames" DataSourceName="Golf.dbo.Staff" DataTypeServer="nvarchar(20)" DbType="String" Direction="Input" ParameterName="@Surnames" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="Surnames" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Names" ColumnName="Names" DataSourceName="Golf.dbo.Staff" DataTypeServer="nvarchar(20)" DbType="String" Direction="Input" ParameterName="@Names" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="Names" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="MiddleName" ColumnName="MiddleName" DataSourceName="Golf.dbo.Staff" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Staff] SET [Surnames] = @Surnames, [Names] = @Names, [MiddleName] = @MiddleName WHERE ([ID_Staff] = @Original_ID_Staff)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Surnames" ColumnName="Surnames" DataSourceName="Golf.dbo.Staff" DataTypeServer="nvarchar(20)" DbType="String" Direction="Input" ParameterName="@Surnames" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="Surnames" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Names" ColumnName="Names" DataSourceName="Golf.dbo.Staff" DataTypeServer="nvarchar(20)" DbType="String" Direction="Input" ParameterName="@Names" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="Names" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="MiddleName" ColumnName="MiddleName" DataSourceName="Golf.dbo.Staff" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Staff" ColumnName="ID_Staff" DataSourceName="Golf.dbo.Staff" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Staff" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Staff" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TournamentTableAdapter" GeneratorDataComponentClassName="TournamentTableAdapter" Name="Tournament" UserDataComponentName="TournamentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID_Tournament, Tournament_Name, Time_Start, Time_End, Fields.Fields_name, Prize_Fund FROM dbo.Tournament
LEFT JOIN Fields ON Tournament.ID_Fields = Fields.ID_Fields</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Tournament" DataSetColumn="ID_Tournament" />
              <Mapping SourceColumn="Tournament_Name" DataSetColumn="Tournament_Name" />
              <Mapping SourceColumn="Time_Start" DataSetColumn="Time_Start" />
              <Mapping SourceColumn="Time_End" DataSetColumn="Time_End" />
              <Mapping SourceColumn="Prize_Fund" DataSetColumn="Prize_Fund" />
              <Mapping SourceColumn="Fields_name" DataSetColumn="Fields_name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Tournament] WHERE ([ID_Tournament] = @Original_ID_Tournament) </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Tournament" ColumnName="ID_Tournament" DataSourceName="Golf.dbo.Tournament" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Tournament" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Tournament" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Tournament] ([Tournament_Name], [Time_Start], [Time_End], [ID_Fields], [Prize_Fund]) VALUES (@Tournament_Name, @Time_Start, @Time_End, @ID_Fields, @Prize_Fund)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Tournament_Name" ColumnName="Tournament_Name" DataSourceName="Golf.dbo.Tournament" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@Tournament_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Tournament_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Time_Start" ColumnName="Time_Start" DataSourceName="Golf.dbo.Tournament" DataTypeServer="time" DbType="AnsiString" Direction="Input" ParameterName="@Time_Start" Precision="0" ProviderType="Time" Scale="0" Size="5" SourceColumn="Time_Start" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Time_End" ColumnName="Time_End" DataSourceName="Golf.dbo.Tournament" DataTypeServer="time" DbType="AnsiString" Direction="Input" ParameterName="@Time_End" Precision="0" ProviderType="Time" Scale="0" Size="5" SourceColumn="Time_End" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Fields" ColumnName="ID_Fields" DataSourceName="Golf.dbo.Tournament" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Fields" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Fields" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Prize_Fund" ColumnName="Prize_Fund" DataSourceName="Golf.dbo.Tournament" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Prize_Fund" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Prize_Fund" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="GolfConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Tournament] SET [Tournament_Name] = @Tournament_Name, [Time_Start] = @Time_Start, [Time_End] = @Time_End, [ID_Fields] = @ID_Fields, [Prize_Fund] = @Prize_Fund WHERE ([ID_Tournament] = @Original_ID_Tournament)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Tournament_Name" ColumnName="Tournament_Name" DataSourceName="Golf.dbo.Tournament" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@Tournament_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Tournament_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Time_Start" ColumnName="Time_Start" DataSourceName="Golf.dbo.Tournament" DataTypeServer="time" DbType="AnsiString" Direction="Input" ParameterName="@Time_Start" Precision="0" ProviderType="Time" Scale="0" Size="5" SourceColumn="Time_Start" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Time_End" ColumnName="Time_End" DataSourceName="Golf.dbo.Tournament" DataTypeServer="time" DbType="AnsiString" Direction="Input" ParameterName="@Time_End" Precision="0" ProviderType="Time" Scale="0" Size="5" SourceColumn="Time_End" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Fields" ColumnName="ID_Fields" DataSourceName="Golf.dbo.Tournament" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Fields" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Fields" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Prize_Fund" ColumnName="Prize_Fund" DataSourceName="Golf.dbo.Tournament" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Prize_Fund" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Prize_Fund" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Tournament" ColumnName="ID_Tournament" DataSourceName="Golf.dbo.Tournament" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Tournament" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Tournament" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GolfDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="GolfDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="GolfDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Autorization" msprop:Generator_RowEvHandlerName="AutorizationRowChangeEventHandler" msprop:Generator_RowDeletedName="AutorizationRowDeleted" msprop:Generator_RowDeletingName="AutorizationRowDeleting" msprop:Generator_RowEvArgName="AutorizationRowChangeEvent" msprop:Generator_TablePropName="Autorization" msprop:Generator_RowChangedName="AutorizationRowChanged" msprop:Generator_UserTableName="Autorization" msprop:Generator_RowChangingName="AutorizationRowChanging" msprop:Generator_RowClassName="AutorizationRow" msprop:Generator_TableClassName="AutorizationDataTable" msprop:Generator_TableVarName="tableAutorization">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Autorization" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID_AutorizationColumn" msprop:Generator_ColumnPropNameInRow="ID_Autorization" msprop:Generator_UserColumnName="ID_Autorization" msprop:Generator_ColumnVarNameInTable="columnID_Autorization" type="xs:int" />
              <xs:element name="Login" msprop:Generator_ColumnPropNameInTable="LoginColumn" msprop:Generator_ColumnPropNameInRow="Login" msprop:Generator_UserColumnName="Login" msprop:Generator_ColumnVarNameInTable="columnLogin">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_UserColumnName="Password" msprop:Generator_ColumnVarNameInTable="columnPassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID_Roles" msprop:Generator_ColumnPropNameInTable="ID_RolesColumn" msprop:Generator_ColumnPropNameInRow="ID_Roles" msprop:Generator_UserColumnName="ID_Roles" msprop:Generator_ColumnVarNameInTable="columnID_Roles" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Booking" msprop:Generator_RowEvHandlerName="BookingRowChangeEventHandler" msprop:Generator_RowDeletedName="BookingRowDeleted" msprop:Generator_RowDeletingName="BookingRowDeleting" msprop:Generator_RowEvArgName="BookingRowChangeEvent" msprop:Generator_TablePropName="Booking" msprop:Generator_RowChangedName="BookingRowChanged" msprop:Generator_UserTableName="Booking" msprop:Generator_RowChangingName="BookingRowChanging" msprop:Generator_RowClassName="BookingRow" msprop:Generator_TableClassName="BookingDataTable" msprop:Generator_TableVarName="tableBooking">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Booking" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID_BookingColumn" msprop:Generator_ColumnPropNameInRow="ID_Booking" msprop:Generator_UserColumnName="ID_Booking" msprop:Generator_ColumnVarNameInTable="columnID_Booking" type="xs:int" />
              <xs:element name="TimeStart" msprop:Generator_ColumnPropNameInTable="TimeStartColumn" msprop:Generator_ColumnPropNameInRow="TimeStart" msprop:Generator_UserColumnName="TimeStart" msprop:Generator_ColumnVarNameInTable="columnTimeStart" type="xs:duration" />
              <xs:element name="TimeEnd" msprop:Generator_ColumnPropNameInTable="TimeEndColumn" msprop:Generator_ColumnPropNameInRow="TimeEnd" msprop:Generator_UserColumnName="TimeEnd" msprop:Generator_ColumnVarNameInTable="columnTimeEnd" type="xs:duration" />
              <xs:element name="Surnames" msprop:Generator_UserColumnName="Surnames" msprop:Generator_ColumnPropNameInTable="SurnamesColumn" msprop:Generator_ColumnPropNameInRow="Surnames" msprop:Generator_ColumnVarNameInTable="columnSurnames" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Fields_name" msprop:Generator_UserColumnName="Fields_name" msprop:Generator_ColumnPropNameInTable="Fields_nameColumn" msprop:Generator_ColumnPropNameInRow="Fields_name" msprop:Generator_ColumnVarNameInTable="columnFields_name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Inventory_name" msprop:Generator_UserColumnName="Inventory_name" msprop:Generator_ColumnPropNameInTable="Inventory_nameColumn" msprop:Generator_ColumnPropNameInRow="Inventory_name" msprop:Generator_ColumnVarNameInTable="columnInventory_name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Surnames1" msprop:Generator_UserColumnName="Surnames1" msprop:Generator_ColumnPropNameInTable="Surnames1Column" msprop:Generator_ColumnPropNameInRow="Surnames1" msprop:Generator_ColumnVarNameInTable="columnSurnames1" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Client" msprop:Generator_RowEvHandlerName="ClientRowChangeEventHandler" msprop:Generator_RowDeletedName="ClientRowDeleted" msprop:Generator_RowDeletingName="ClientRowDeleting" msprop:Generator_RowEvArgName="ClientRowChangeEvent" msprop:Generator_TablePropName="Client" msprop:Generator_RowChangedName="ClientRowChanged" msprop:Generator_UserTableName="Client" msprop:Generator_RowChangingName="ClientRowChanging" msprop:Generator_RowClassName="ClientRow" msprop:Generator_TableClassName="ClientDataTable" msprop:Generator_TableVarName="tableClient">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Client" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID_ClientColumn" msprop:Generator_ColumnPropNameInRow="ID_Client" msprop:Generator_UserColumnName="ID_Client" msprop:Generator_ColumnVarNameInTable="columnID_Client" type="xs:int" />
              <xs:element name="Surnames" msprop:Generator_ColumnPropNameInTable="SurnamesColumn" msprop:Generator_ColumnPropNameInRow="Surnames" msprop:Generator_UserColumnName="Surnames" msprop:Generator_ColumnVarNameInTable="columnSurnames">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Names" msprop:Generator_ColumnPropNameInTable="NamesColumn" msprop:Generator_ColumnPropNameInRow="Names" msprop:Generator_UserColumnName="Names" msprop:Generator_ColumnVarNameInTable="columnNames">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MiddleName" msprop:Generator_ColumnPropNameInTable="MiddleNameColumn" msprop:Generator_ColumnPropNameInRow="MiddleName" msprop:Generator_UserColumnName="MiddleName" msprop:Generator_ColumnVarNameInTable="columnMiddleName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Membership_name" msprop:Generator_ColumnPropNameInRow="Membership_name" msprop:Generator_ColumnPropNameInTable="Membership_nameColumn" msprop:Generator_ColumnVarNameInTable="columnMembership_name" msprop:Generator_UserColumnName="Membership_name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Client_Tournament" msprop:Generator_RowEvHandlerName="Client_TournamentRowChangeEventHandler" msprop:Generator_RowDeletedName="Client_TournamentRowDeleted" msprop:Generator_RowDeletingName="Client_TournamentRowDeleting" msprop:Generator_RowEvArgName="Client_TournamentRowChangeEvent" msprop:Generator_TablePropName="Client_Tournament" msprop:Generator_RowChangedName="Client_TournamentRowChanged" msprop:Generator_UserTableName="Client_Tournament" msprop:Generator_RowChangingName="Client_TournamentRowChanging" msprop:Generator_RowClassName="Client_TournamentRow" msprop:Generator_TableClassName="Client_TournamentDataTable" msprop:Generator_TableVarName="tableClient_Tournament">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Client_Tournament" msprop:Generator_ColumnPropNameInTable="ID_Client_TournamentColumn" msprop:Generator_ColumnPropNameInRow="ID_Client_Tournament" msprop:Generator_UserColumnName="ID_Client_Tournament" msprop:Generator_ColumnVarNameInTable="columnID_Client_Tournament" type="xs:int" />
              <xs:element name="ID_Client" msprop:Generator_ColumnPropNameInTable="ID_ClientColumn" msprop:Generator_ColumnPropNameInRow="ID_Client" msprop:Generator_UserColumnName="ID_Client" msprop:Generator_ColumnVarNameInTable="columnID_Client" type="xs:int" minOccurs="0" />
              <xs:element name="ID_Tournament" msprop:Generator_ColumnPropNameInTable="ID_TournamentColumn" msprop:Generator_ColumnPropNameInRow="ID_Tournament" msprop:Generator_UserColumnName="ID_Tournament" msprop:Generator_ColumnVarNameInTable="columnID_Tournament" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Fields" msprop:Generator_RowEvHandlerName="FieldsRowChangeEventHandler" msprop:Generator_RowDeletedName="FieldsRowDeleted" msprop:Generator_RowDeletingName="FieldsRowDeleting" msprop:Generator_RowEvArgName="FieldsRowChangeEvent" msprop:Generator_TablePropName="Fields" msprop:Generator_RowChangedName="FieldsRowChanged" msprop:Generator_UserTableName="Fields" msprop:Generator_RowChangingName="FieldsRowChanging" msprop:Generator_RowClassName="FieldsRow" msprop:Generator_TableClassName="FieldsDataTable" msprop:Generator_TableVarName="tableFields">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Fields" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID_FieldsColumn" msprop:Generator_ColumnPropNameInRow="ID_Fields" msprop:Generator_UserColumnName="ID_Fields" msprop:Generator_ColumnVarNameInTable="columnID_Fields" type="xs:int" />
              <xs:element name="Fields_name" msprop:Generator_ColumnPropNameInTable="Fields_nameColumn" msprop:Generator_ColumnPropNameInRow="Fields_name" msprop:Generator_UserColumnName="Fields_name" msprop:Generator_ColumnVarNameInTable="columnFields_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_UserColumnName="Description" msprop:Generator_ColumnVarNameInTable="columnDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Inventory" msprop:Generator_RowEvHandlerName="InventoryRowChangeEventHandler" msprop:Generator_RowDeletedName="InventoryRowDeleted" msprop:Generator_RowDeletingName="InventoryRowDeleting" msprop:Generator_RowEvArgName="InventoryRowChangeEvent" msprop:Generator_TablePropName="Inventory" msprop:Generator_RowChangedName="InventoryRowChanged" msprop:Generator_UserTableName="Inventory" msprop:Generator_RowChangingName="InventoryRowChanging" msprop:Generator_RowClassName="InventoryRow" msprop:Generator_TableClassName="InventoryDataTable" msprop:Generator_TableVarName="tableInventory">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Inventory" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID_InventoryColumn" msprop:Generator_ColumnPropNameInRow="ID_Inventory" msprop:Generator_UserColumnName="ID_Inventory" msprop:Generator_ColumnVarNameInTable="columnID_Inventory" type="xs:int" />
              <xs:element name="Inventory_name" msprop:Generator_ColumnPropNameInTable="Inventory_nameColumn" msprop:Generator_ColumnPropNameInRow="Inventory_name" msprop:Generator_UserColumnName="Inventory_name" msprop:Generator_ColumnVarNameInTable="columnInventory_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Quantity" msprop:Generator_ColumnPropNameInTable="QuantityColumn" msprop:Generator_ColumnPropNameInRow="Quantity" msprop:Generator_UserColumnName="Quantity" msprop:Generator_ColumnVarNameInTable="columnQuantity" type="xs:int" />
              <xs:element name="Cost" msprop:Generator_ColumnPropNameInTable="CostColumn" msprop:Generator_ColumnPropNameInRow="Cost" msprop:Generator_UserColumnName="Cost" msprop:Generator_ColumnVarNameInTable="columnCost" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Membership" msprop:Generator_RowEvHandlerName="MembershipRowChangeEventHandler" msprop:Generator_RowDeletedName="MembershipRowDeleted" msprop:Generator_RowDeletingName="MembershipRowDeleting" msprop:Generator_RowEvArgName="MembershipRowChangeEvent" msprop:Generator_TablePropName="Membership" msprop:Generator_RowChangedName="MembershipRowChanged" msprop:Generator_UserTableName="Membership" msprop:Generator_RowChangingName="MembershipRowChanging" msprop:Generator_RowClassName="MembershipRow" msprop:Generator_TableClassName="MembershipDataTable" msprop:Generator_TableVarName="tableMembership">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Membership" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID_MembershipColumn" msprop:Generator_ColumnPropNameInRow="ID_Membership" msprop:Generator_UserColumnName="ID_Membership" msprop:Generator_ColumnVarNameInTable="columnID_Membership" type="xs:int" />
              <xs:element name="Membership_name" msprop:Generator_ColumnPropNameInTable="Membership_nameColumn" msprop:Generator_ColumnPropNameInRow="Membership_name" msprop:Generator_UserColumnName="Membership_name" msprop:Generator_ColumnVarNameInTable="columnMembership_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Cost" msprop:Generator_ColumnPropNameInTable="CostColumn" msprop:Generator_ColumnPropNameInRow="Cost" msprop:Generator_UserColumnName="Cost" msprop:Generator_ColumnVarNameInTable="columnCost" type="xs:int" />
              <xs:element name="ID_Membership_Time" msprop:Generator_ColumnPropNameInTable="ID_Membership_TimeColumn" msprop:Generator_ColumnPropNameInRow="ID_Membership_Time" msprop:Generator_UserColumnName="ID_Membership_Time" msprop:Generator_ColumnVarNameInTable="columnID_Membership_Time" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Membership_Time" msprop:Generator_RowEvHandlerName="Membership_TimeRowChangeEventHandler" msprop:Generator_RowDeletedName="Membership_TimeRowDeleted" msprop:Generator_RowDeletingName="Membership_TimeRowDeleting" msprop:Generator_RowEvArgName="Membership_TimeRowChangeEvent" msprop:Generator_TablePropName="Membership_Time" msprop:Generator_RowChangedName="Membership_TimeRowChanged" msprop:Generator_UserTableName="Membership_Time" msprop:Generator_RowChangingName="Membership_TimeRowChanging" msprop:Generator_RowClassName="Membership_TimeRow" msprop:Generator_TableClassName="Membership_TimeDataTable" msprop:Generator_TableVarName="tableMembership_Time">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Membership_Time" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID_Membership_TimeColumn" msprop:Generator_ColumnPropNameInRow="ID_Membership_Time" msprop:Generator_UserColumnName="ID_Membership_Time" msprop:Generator_ColumnVarNameInTable="columnID_Membership_Time" type="xs:int" />
              <xs:element name="Time" msprop:Generator_ColumnPropNameInTable="TimeColumn" msprop:Generator_ColumnPropNameInRow="Time" msprop:Generator_UserColumnName="Time" msprop:Generator_ColumnVarNameInTable="columnTime">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Roles" msprop:Generator_RowEvHandlerName="RolesRowChangeEventHandler" msprop:Generator_RowDeletedName="RolesRowDeleted" msprop:Generator_RowDeletingName="RolesRowDeleting" msprop:Generator_RowEvArgName="RolesRowChangeEvent" msprop:Generator_TablePropName="Roles" msprop:Generator_RowChangedName="RolesRowChanged" msprop:Generator_UserTableName="Roles" msprop:Generator_RowChangingName="RolesRowChanging" msprop:Generator_RowClassName="RolesRow" msprop:Generator_TableClassName="RolesDataTable" msprop:Generator_TableVarName="tableRoles">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Roles" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID_RolesColumn" msprop:Generator_ColumnPropNameInRow="ID_Roles" msprop:Generator_UserColumnName="ID_Roles" msprop:Generator_ColumnVarNameInTable="columnID_Roles" type="xs:int" />
              <xs:element name="Name_Role" msprop:Generator_ColumnPropNameInTable="Name_RoleColumn" msprop:Generator_ColumnPropNameInRow="Name_Role" msprop:Generator_UserColumnName="Name_Role" msprop:Generator_ColumnVarNameInTable="columnName_Role">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Service" msprop:Generator_RowEvHandlerName="ServiceRowChangeEventHandler" msprop:Generator_RowDeletedName="ServiceRowDeleted" msprop:Generator_RowDeletingName="ServiceRowDeleting" msprop:Generator_RowEvArgName="ServiceRowChangeEvent" msprop:Generator_TablePropName="Service" msprop:Generator_RowChangedName="ServiceRowChanged" msprop:Generator_UserTableName="Service" msprop:Generator_RowChangingName="ServiceRowChanging" msprop:Generator_RowClassName="ServiceRow" msprop:Generator_TableClassName="ServiceDataTable" msprop:Generator_TableVarName="tableService">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Service" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID_ServiceColumn" msprop:Generator_ColumnPropNameInRow="ID_Service" msprop:Generator_UserColumnName="ID_Service" msprop:Generator_ColumnVarNameInTable="columnID_Service" type="xs:int" />
              <xs:element name="Cost" msprop:Generator_ColumnPropNameInTable="CostColumn" msprop:Generator_ColumnPropNameInRow="Cost" msprop:Generator_UserColumnName="Cost" msprop:Generator_ColumnVarNameInTable="columnCost" type="xs:int" />
              <xs:element name="ID_Inventory" msprop:Generator_ColumnPropNameInTable="ID_InventoryColumn" msprop:Generator_ColumnPropNameInRow="ID_Inventory" msprop:Generator_UserColumnName="ID_Inventory" msprop:Generator_ColumnVarNameInTable="columnID_Inventory" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Staff" msprop:Generator_RowEvHandlerName="StaffRowChangeEventHandler" msprop:Generator_RowDeletedName="StaffRowDeleted" msprop:Generator_RowDeletingName="StaffRowDeleting" msprop:Generator_RowEvArgName="StaffRowChangeEvent" msprop:Generator_TablePropName="Staff" msprop:Generator_RowChangedName="StaffRowChanged" msprop:Generator_UserTableName="Staff" msprop:Generator_RowChangingName="StaffRowChanging" msprop:Generator_RowClassName="StaffRow" msprop:Generator_TableClassName="StaffDataTable" msprop:Generator_TableVarName="tableStaff">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Staff" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID_StaffColumn" msprop:Generator_ColumnPropNameInRow="ID_Staff" msprop:Generator_UserColumnName="ID_Staff" msprop:Generator_ColumnVarNameInTable="columnID_Staff" type="xs:int" />
              <xs:element name="Surnames" msprop:Generator_ColumnPropNameInTable="SurnamesColumn" msprop:Generator_ColumnPropNameInRow="Surnames" msprop:Generator_UserColumnName="Surnames" msprop:Generator_ColumnVarNameInTable="columnSurnames">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Names" msprop:Generator_ColumnPropNameInTable="NamesColumn" msprop:Generator_ColumnPropNameInRow="Names" msprop:Generator_UserColumnName="Names" msprop:Generator_ColumnVarNameInTable="columnNames">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MiddleName" msprop:Generator_ColumnPropNameInTable="MiddleNameColumn" msprop:Generator_ColumnPropNameInRow="MiddleName" msprop:Generator_UserColumnName="MiddleName" msprop:Generator_ColumnVarNameInTable="columnMiddleName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tournament" msprop:Generator_RowEvHandlerName="TournamentRowChangeEventHandler" msprop:Generator_RowDeletedName="TournamentRowDeleted" msprop:Generator_RowDeletingName="TournamentRowDeleting" msprop:Generator_RowEvArgName="TournamentRowChangeEvent" msprop:Generator_TablePropName="Tournament" msprop:Generator_RowChangedName="TournamentRowChanged" msprop:Generator_UserTableName="Tournament" msprop:Generator_RowChangingName="TournamentRowChanging" msprop:Generator_RowClassName="TournamentRow" msprop:Generator_TableClassName="TournamentDataTable" msprop:Generator_TableVarName="tableTournament">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Tournament" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID_TournamentColumn" msprop:Generator_ColumnPropNameInRow="ID_Tournament" msprop:Generator_UserColumnName="ID_Tournament" msprop:Generator_ColumnVarNameInTable="columnID_Tournament" type="xs:int" />
              <xs:element name="Tournament_Name" msprop:Generator_ColumnPropNameInTable="Tournament_NameColumn" msprop:Generator_ColumnPropNameInRow="Tournament_Name" msprop:Generator_UserColumnName="Tournament_Name" msprop:Generator_ColumnVarNameInTable="columnTournament_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Time_Start" msprop:Generator_ColumnPropNameInTable="Time_StartColumn" msprop:Generator_ColumnPropNameInRow="Time_Start" msprop:Generator_UserColumnName="Time_Start" msprop:Generator_ColumnVarNameInTable="columnTime_Start" type="xs:duration" />
              <xs:element name="Time_End" msprop:Generator_ColumnPropNameInTable="Time_EndColumn" msprop:Generator_ColumnPropNameInRow="Time_End" msprop:Generator_UserColumnName="Time_End" msprop:Generator_ColumnVarNameInTable="columnTime_End" type="xs:duration" />
              <xs:element name="Prize_Fund" msprop:Generator_ColumnPropNameInTable="Prize_FundColumn" msprop:Generator_ColumnPropNameInRow="Prize_Fund" msprop:Generator_UserColumnName="Prize_Fund" msprop:Generator_ColumnVarNameInTable="columnPrize_Fund" type="xs:int" />
              <xs:element name="Fields_name" msprop:Generator_ColumnPropNameInRow="Fields_name" msprop:Generator_ColumnPropNameInTable="Fields_nameColumn" msprop:Generator_ColumnVarNameInTable="columnFields_name" msprop:Generator_UserColumnName="Fields_name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Autorization" />
      <xs:field xpath="mstns:ID_Autorization" />
    </xs:unique>
    <xs:unique name="Booking_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Booking" />
      <xs:field xpath="mstns:ID_Booking" />
    </xs:unique>
    <xs:unique name="Client_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Client" />
      <xs:field xpath="mstns:ID_Client" />
    </xs:unique>
    <xs:unique name="Client_Tournament_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Client_Tournament" />
      <xs:field xpath="mstns:ID_Client_Tournament" />
    </xs:unique>
    <xs:unique name="Fields_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Fields" />
      <xs:field xpath="mstns:ID_Fields" />
    </xs:unique>
    <xs:unique name="Inventory_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Inventory" />
      <xs:field xpath="mstns:ID_Inventory" />
    </xs:unique>
    <xs:unique name="Membership_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Membership" />
      <xs:field xpath="mstns:ID_Membership" />
    </xs:unique>
    <xs:unique name="Membership_Time_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Membership_Time" />
      <xs:field xpath="mstns:ID_Membership_Time" />
    </xs:unique>
    <xs:unique name="Roles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Roles" />
      <xs:field xpath="mstns:ID_Roles" />
    </xs:unique>
    <xs:unique name="Service_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Service" />
      <xs:field xpath="mstns:ID_Service" />
    </xs:unique>
    <xs:unique name="Staff_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Staff" />
      <xs:field xpath="mstns:ID_Staff" />
    </xs:unique>
    <xs:unique name="Tournament_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tournament" />
      <xs:field xpath="mstns:ID_Tournament" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__Autorizat__ID_Ro__3587F3E0" msdata:parent="Roles" msdata:child="Autorization" msdata:parentkey="ID_Roles" msdata:childkey="ID_Roles" msprop:Generator_UserParentTable="Roles" msprop:Generator_UserChildTable="Autorization" msprop:Generator_RelationVarName="relationFK__Autorizat__ID_Ro__3587F3E0" msprop:Generator_ChildPropName="GetAutorizationRows" msprop:Generator_UserRelationName="FK__Autorizat__ID_Ro__3587F3E0" msprop:Generator_ParentPropName="RolesRow" />
      <msdata:Relationship name="FK_Client_Tournament_Client" msdata:parent="Client" msdata:child="Client_Tournament" msdata:parentkey="ID_Client" msdata:childkey="ID_Client" msprop:Generator_UserParentTable="Client" msprop:Generator_UserChildTable="Client_Tournament" msprop:Generator_RelationVarName="relationFK_Client_Tournament_Client" msprop:Generator_ChildPropName="GetClient_TournamentRows" msprop:Generator_ParentPropName="ClientRow" msprop:Generator_UserRelationName="FK_Client_Tournament_Client" />
      <msdata:Relationship name="FK_Client_Tournament_Tournament" msdata:parent="Tournament" msdata:child="Client_Tournament" msdata:parentkey="ID_Tournament" msdata:childkey="ID_Tournament" msprop:Generator_UserParentTable="Tournament" msprop:Generator_UserChildTable="Client_Tournament" msprop:Generator_RelationVarName="relationFK_Client_Tournament_Tournament" msprop:Generator_ChildPropName="GetClient_TournamentRows" msprop:Generator_UserRelationName="FK_Client_Tournament_Tournament" msprop:Generator_ParentPropName="TournamentRow" />
      <msdata:Relationship name="FK_Membership_Membership_Time" msdata:parent="Membership_Time" msdata:child="Membership" msdata:parentkey="ID_Membership_Time" msdata:childkey="ID_Membership_Time" msprop:Generator_UserParentTable="Membership_Time" msprop:Generator_UserChildTable="Membership" msprop:Generator_RelationVarName="relationFK_Membership_Membership_Time" msprop:Generator_ChildPropName="GetMembershipRows" msprop:Generator_UserRelationName="FK_Membership_Membership_Time" msprop:Generator_ParentPropName="Membership_TimeRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>